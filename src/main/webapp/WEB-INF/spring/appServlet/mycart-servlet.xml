<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:flow="http://www.springframework.org/schema/webflow-config"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-2.5.xsd
		http://www.springframework.org/schema/webflow-config
		http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd
		http://www.springframework.org/schema/util
		http://www.springframework.org/schema/util/spring-util-2.0.xsd
		http://www.springframework.org/schema/tx 
        http://www.springframework.org/schema/tx/spring-tx-4.0.xsd"
	default-autowire="byName">


	<!-- ================================================================== -->
	<!-- Spring MVC stuff -->
	<!-- ================================================================== -->

	<!-- This activates post-processors for annotation-based config -->
	<!-- http://www.infoq.com/articles/spring-2.5-part-1 -->
	<context:annotation-config />

	<!-- Scan for controllers and services -->
	<context:component-scan base-package="com.journaldev.spring"
		use-default-filters="false">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- Enables POJO @Controllers (like CartController) -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />

	<!-- Maps flow requests from DispatcherServlet to flowController -->
	<bean class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
		<property name="mappings">
			<value>
				/cart.do=flowController
				/login.do=flowController
			</value>
		</property>
		<property name="alwaysUseFullPath" value="true" />
	</bean>

	<!-- Enables annotated methods on POJO @Controllers (like CartController) -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />

	<!-- Enables plain Controllers (e.g. FlowController) -->
	<bean
		class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter" />

	<!-- Maps a logical view name to a physical resource -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>


	<!-- ================================================================== -->
	<!-- Spring Web Flow stuff -->
	<!-- ================================================================== -->

	<!-- Using FlowController instead of FlowHandlers; see SWF Reference Guide, 
		section 9.5. -->
	<bean id="flowController" class="org.springframework.webflow.mvc.servlet.FlowController">
		<property name="flowExecutor" ref="flowExecutor" />
	</bean>

	<flow:flow-executor id="flowExecutor" flow-registry="flowRegistry" />

	<!-- This creates an XmlFlowRegistryFactory bean -->
	<flow:flow-registry id="flowRegistry"
		flow-builder-services="flowBuilderServices">
		<flow:flow-location path="/WEB-INF/flows/cart.xml" />
		<flow:flow-location path="/WEB-INF/flows/login.xml" />
	</flow:flow-registry>

	<flow:flow-builder-services id="flowBuilderServices"
		view-factory-creator="viewFactoryCreator" />

	<bean id="viewFactoryCreator"
		class="org.springframework.webflow.mvc.builder.MvcViewFactoryCreator">
		<property name="viewResolvers">
			<list>
				<ref bean="viewResolver" />
			</list>
		</property>
	</bean>


	<!-- ================================================================== -->
	<!-- Other beans -->
	<!-- ================================================================== -->

	<!-- Autowired into CartServiceImpl -->
	<!-- Create a proxy to generate session-scoped shopping carts -->
	<!-- <bean id="shoppingCart" class="mycart.ShoppingCart" scope="session"> 
		This requires CGLIB <aop:scoped-proxy/> </bean> -->

	<!-- Autowired into CartServiceImpl -->
	<!-- <util:list id="shippingOptions"> <value>Standard Shipping (1 week) 
		- Free</value> <value>Expedited Shipping (3 days) - $19.95</value> <value>Overnight 
		Shipping - $59.95</value> </util:list> -->



	<!-- I'd prefer if this didn't have to be here, but we'll keep it for now. -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url"
			value="jdbc:mysql://localhost:3306/fauxleather" />
		<property name="username" value="root" />
		<property name="password" value="pass" />
	</bean>

	<!-- Hibernate 4 SessionFactory Bean definition -->
	<bean id="hibernate4AnnotatedSessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="annotatedClasses">
			<list>
				<value>com.journaldev.spring.model.Account</value>
				<value>com.journaldev.spring.model.Cart</value>
				<value>com.journaldev.spring.model.Inventory</value>
				<value>com.journaldev.spring.model.Person</value>
				<value>com.journaldev.spring.model.TransactionLog
				</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect
				</prop>
				<prop key="hibernate.show_sql">true</prop>
			</props>
		</property>
	</bean>

	<bean id="accountDAO" class="com.journaldev.spring.dao.AccountDAOImpl">
		<property name="sessionFactory"
			ref="hibernate4AnnotatedSessionFactory" />
	</bean>
	<bean id="accountService"
		class="com.journaldev.spring.service.AccountServiceImpl">
		<property name="accountDAO" ref="accountDAO"></property>
	</bean>
	<bean id="cartDAO" class="com.journaldev.spring.dao.CartDAOImpl">
		<property name="sessionFactory"
			ref="hibernate4AnnotatedSessionFactory" />
	</bean>
	<bean id="cartService"
		class="com.journaldev.spring.service.CartServiceImpl">
		<property name="cartDAO" ref="cartDAO"></property>
	</bean>
	<bean id="inventoryDAO" class="com.journaldev.spring.dao.InventoryDAOImpl">
		<property name="sessionFactory"
			ref="hibernate4AnnotatedSessionFactory" />
	</bean>
	<bean id="inventoryService"
		class="com.journaldev.spring.service.InventoryServiceImpl">
		<property name="inventoryDAO" ref="inventoryDAO"></property>
	</bean>
	<bean id="personDAO" class="com.journaldev.spring.dao.PersonDAOImpl">
		<property name="sessionFactory"
			ref="hibernate4AnnotatedSessionFactory" />
	</bean>
	<bean id="personService"
		class="com.journaldev.spring.service.PersonServiceImpl">
		<property name="personDAO" ref="personDAO"></property>
	</bean>
	<bean id="transactionDAO"
		class="com.journaldev.spring.dao.TransactionDAOImpl">
		<property name="sessionFactory"
			ref="hibernate4AnnotatedSessionFactory" />
	</bean>
	<bean id="transactionService"
		class="com.journaldev.spring.service.TransactionServiceImpl">
		<property name="transactionDAO" ref="transactionDAO"></property>
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory"
			ref="hibernate4AnnotatedSessionFactory" />
	</bean>

</beans>
