<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:hibernate="http://hibernate.org/xsd/hibernate-configuration"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://hibernate.org/xsd/hibernate-configuration http://hibernate.org/xsd/hibernate-configuration/hibernate-configuration-4.0.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<!-- <context:component-scan base-package="com.journaldev.spring.controller" 
		/> -->
	<context:component-scan
		base-package="com.journaldev.spring.controller, 
		com.journaldev.spring.dao, 
		com.journaldev.spring.model, 
		com.journaldev.spring.service" />

	<beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<beans:property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<beans:property name="url"
			value="jdbc:mysql://localhost:3306/fauxleather" />
		<beans:property name="username" value="root" />
		<beans:property name="password" value="pass" />
	</beans:bean>

	<!-- Hibernate 4 SessionFactory Bean definition -->
	<beans:bean id="hibernate4AnnotatedSessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="annotatedClasses">
			<beans:list>
				<beans:value>com.journaldev.spring.model.Account</beans:value>
				<beans:value>com.journaldev.spring.model.Cart</beans:value>
				<beans:value>com.journaldev.spring.model.Inventory</beans:value>
				<beans:value>com.journaldev.spring.model.InventoryDetail</beans:value>
				<beans:value>com.journaldev.spring.model.Person</beans:value>
				<beans:value>com.journaldev.spring.model.TransactionLog
				</beans:value>
			</beans:list>
		</beans:property>
		<beans:property name="hibernateProperties">
			<beans:props>
				<beans:prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect
				</beans:prop>
				<beans:prop key="hibernate.show_sql">true</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>

	<beans:bean id="accountDAO" class="com.journaldev.spring.dao.AccountDAOImpl">
		<beans:property name="sessionFactory"
			ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	<beans:bean id="accountService"
		class="com.journaldev.spring.service.AccountServiceImpl">
		<beans:property name="accountDAO" ref="accountDAO"></beans:property>
	</beans:bean>
	<beans:bean id="cartDAO" class="com.journaldev.spring.dao.CartDAOImpl">
		<beans:property name="sessionFactory"
			ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	<beans:bean id="cartService"
		class="com.journaldev.spring.service.CartServiceImpl">
		<beans:property name="cartDAO" ref="cartDAO"></beans:property>
	</beans:bean>
	<beans:bean id="inventoryDAO" class="com.journaldev.spring.dao.InventoryDAOImpl">
		<beans:property name="sessionFactory"
			ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	<beans:bean id="inventoryService"
		class="com.journaldev.spring.service.InventoryServiceImpl">
		<beans:property name="inventoryDAO" ref="inventoryDAO"></beans:property>
	</beans:bean>
	<beans:bean id="inventoryDetailDAO" class="com.journaldev.spring.dao.InventoryDetailDAOImpl">
		<beans:property name="sessionFactory"
			ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	<beans:bean id="inventoryDetailService"
		class="com.journaldev.spring.service.InventoryDetailServiceImpl">
		<beans:property name="inventoryDetailDAO" ref="inventoryDetailDAO"></beans:property>
	</beans:bean>		
	<beans:bean id="personDAO" class="com.journaldev.spring.dao.PersonDAOImpl">
		<beans:property name="sessionFactory"
			ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	<beans:bean id="personService"
		class="com.journaldev.spring.service.PersonServiceImpl">
		<beans:property name="personDAO" ref="personDAO"></beans:property>
	</beans:bean>
	<beans:bean id="transactionDAO"
		class="com.journaldev.spring.dao.TransactionDAOImpl">
		<beans:property name="sessionFactory"
			ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	<beans:bean id="transactionService"
		class="com.journaldev.spring.service.TransactionServiceImpl">
		<beans:property name="transactionDAO" ref="transactionDAO"></beans:property>
	</beans:bean>

	<tx:annotation-driven transaction-manager="transactionManager" />

	<beans:bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<beans:property name="sessionFactory"
			ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>

</beans:beans>
