<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.fauxshop.spring</groupId>
	<artifactId>fauxshop</artifactId>
	<name>fauxshop</name>
	<packaging>war</packaging>
	<version>1.0.0-BUILD-SNAPSHOT</version>
	<properties>
		<java-version>1.7</java-version>
		<org.springframework-version>4.0.2.RELEASE</org.springframework-version>
		<org.aspectj-version>1.7.4</org.aspectj-version>
		<org.slf4j-version>1.7.5</org.slf4j-version>
		<mysql-connector-java-version>5.1.36</mysql-connector-java-version>
		<hibernate.version>4.3.5.Final</hibernate.version>
		<org.springframework.webflow-version>2.4.1.RELEASE</org.springframework.webflow-version>
		<ognl-version>2.6.9</ognl-version>
		<cglib-nodep-version>2.2.2</cglib-nodep-version>
		<jstl-version>1.2</jstl-version>
	</properties>
	<dependencies>
		<!-- Spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${org.springframework-version}</version>
			<exclusions>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${org.springframework-version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${org.springframework-version}</version>
		</dependency>
		<!-- Spring Security -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>3.2.3.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>3.2.3.RELEASE</version>
		</dependency>
		<!-- Spring Webflow -->
		<dependency>
			<groupId>org.springframework.webflow</groupId>
			<artifactId>spring-webflow</artifactId>
			<version>${org.springframework.webflow-version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.webflow</groupId>
			<artifactId>spring-js</artifactId>
			<version>${org.springframework.webflow-version}</version>
		</dependency>

		<!-- OGNL (used by Spring Web Flow) -->
		<dependency>
			<groupId>ognl</groupId>
			<artifactId>ognl</artifactId>
			<version>${ognl-version}</version>
		</dependency>

		<!-- MySql Connector -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql-connector-java-version}</version>
		</dependency>

		<!-- Hibernate -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>${hibernate.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>${hibernate.version}</version>
		</dependency>

		<!-- Other necessary dependencies -->
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib-nodep</artifactId>
			<version>${cglib-nodep-version}</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>${jstl-version}</version>
		</dependency>

		<!-- Apache Commons DBCP -->
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>1.4</version>
		</dependency>

		<!-- Spring ORM -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${org.springframework-version}</version>
		</dependency>

		<!-- AspectJ -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>${org.aspectj-version}</version>
		</dependency>

		<!-- Logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${org.slf4j-version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${org.slf4j-version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${org.slf4j-version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.15</version>
			<exclusions>
				<exclusion>
					<groupId>javax.mail</groupId>
					<artifactId>mail</artifactId>
				</exclusion>
				<exclusion>
					<groupId>javax.jms</groupId>
					<artifactId>jms</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jdmk</groupId>
					<artifactId>jmxtools</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jmx</groupId>
					<artifactId>jmxri</artifactId>
				</exclusion>
			</exclusions>
			<scope>runtime</scope>
		</dependency>

		<!-- @Inject -->
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>1</version>
		</dependency>

		<!-- Servlet -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>

		<!-- Test -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.7</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>4.0.2.RELEASE</version>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<outputDirectory>C:\tools\apache-tomcat-7.0.62\webapps</outputDirectory>
					<warName>fauxshop</warName>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.9</version>
				<configuration>
					<additionalProjectnatures>
						<projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
					</additionalProjectnatures>
					<additionalBuildcommands>
						<buildcommand>org.springframework.ide.eclipse.core.springbuilder</buildcommand>
					</additionalBuildcommands>
					<downloadSources>true</downloadSources>
					<downloadJavadocs>true</downloadJavadocs>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.5.1</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
					<compilerArgument>-Xlint:all</compilerArgument>
					<showWarnings>true</showWarnings>
					<showDeprecation>true</showDeprecation>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.2.1</version>
				<configuration>
					<mainClass>org.test.int1.Main</mainClass>
				</configuration>
			</plugin>

			<!-- Dropping and rebuilding the database for testing. -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sql-maven-plugin</artifactId>
				<version>1.5</version>

				<dependencies>
					<!-- MySql Connector -->
					<dependency>
						<groupId>mysql</groupId>
						<artifactId>mysql-connector-java</artifactId>
						<version>${mysql-connector-java-version}</version>
					</dependency>
				</dependencies>

				<!-- common configuration shared by all executions -->
				<configuration>
					<driver>com.mysql.jdbc.Driver</driver>
					<url>jdbc:mysql://localhost:3306/fauxleather</url>
					<username>root</username>
					<password>pass</password>
					<!-- You can comment out username/password configurations and have maven 
						to look them up in your settings.xml using ${settingsKey} <settingsKey>sensibleKey</settingsKey> -->
					<!--all executions are ignored if -Dmaven.test.skip=true -->
					<skip>${maven.test.skip}</skip>
				</configuration>

				<executions>
					<execution>
						<id>drop-db-before-test-if-any</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<!-- need another database to drop the targeted one -->
							<url>jdbc:mysql://localhost:3306/fauxleather2</url>
							<autocommit>true</autocommit>
							<sqlCommand>drop database fauxleather</sqlCommand>
							<!-- ignore error when database is not avaiable -->
							<onError>continue</onError>
						</configuration>
					</execution>

					<execution>
						<id>create-db</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<url>jdbc:mysql://localhost:3306/fauxleather2</url>
							<!-- no transaction -->
							<autocommit>true</autocommit>
							<sqlCommand>create database fauxleather</sqlCommand>
						</configuration>
					</execution>

					<execution>
						<id>create-schema</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<autocommit>true</autocommit>
							<srcFiles>
								<srcFile>src/main/sql/fauxleather-schema.sql</srcFile>
							</srcFiles>
						</configuration>
					</execution>

					<execution>
						<id>create-data</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<orderFile>ascending</orderFile>
							<fileset>
								<basedir>${basedir}</basedir>
								<includes>
									<include>src/test/sql/test-account.sql</include>
									<include>src/test/sql/test-cart.sql</include>
									<include>src/test/sql/test-inventory.sql</include>
									<include>src/test/sql/test-inventory_category_code.sql</include>
									<include>src/test/sql/test-inventory_detail.sql</include>
									<include>src/test/sql/test-inventory_type_code.sql</include>
									<include>src/test/sql/test-roles.sql</include>
									<include>src/test/sql/test-sizing.sql</include>
									<include>src/test/sql/test-transaction.sql</include>
								</includes>
							</fileset>
						</configuration>
					</execution>

					<!-- drop db after test -->
					<!-- <execution> <id>drop-db-after-test</id> <phase>test</phase> <goals> 
						<goal>execute</goal> </goals> <configuration> <autocommit>true</autocommit> 
						<sqlCommand>drop database fauxleather</sqlCommand> </configuration> </execution> -->
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
